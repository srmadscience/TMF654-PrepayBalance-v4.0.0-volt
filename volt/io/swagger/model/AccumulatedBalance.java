/*
 * Prepay Balance Management
 * ## TMF API Reference: TMF654 - Prepay Balance Management  ### Draft : 19.5 - January 2020  The Prepay Balance Management API enables consumers to manage the balance, recharge (top-up), transfer, reserve, unreserve, deduct and balance adjustments of a  bucket. A bucket is understood in the context of this API to be an entity that keeps track of the balance available to use services. Every bucket will measure balance in different units, it can be monetary or non-monetary (e.g.: number of sms that are available, number of GB of data available, â€¦)  ### Resources - Bucket - TopupBalance - AdjustBalance - TransferBalance - ReserveBalance - AccumulatedBalance - BalanceActionHistory  ### Operations - Retrieve the balance information on a bucket for a given product (individual or aggregated). - Retrieve the list of balance-related operations performed over a given product - Retrieve information about all the top-up operations stored in the server filtered by some criteria. - Perform a new top up operation (recharge) - Retrieve detailed information about a top-up operation previously processed by the server. - Retrieve the current and historic status information about a top-up operation previously processed by the server. - Perform a new transfer operation - Retrieve information about all the transfer operations stored in the server filtered by some criteria - Retrieve detailed information about a transfer operation previously processed by the server - Retrieve the current and historic status information about a transfer operation previously processed by the server. - Retrieve information about all the adjustments stored in the server filtered by some criteria. - Perform a new adjustment operation - Retrieve detailed information about a balance adjustment operation previously processed by the server - Reserve a balance on a bucket. - Unreserve a balance on a bucket. - Retrieve aggregated (accumulative) balances for a bucket.
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.model.BucketRef;
import io.swagger.model.LogicalResourceRef;
import io.swagger.model.PartyAccountRef;
import io.swagger.model.ProductRef;
import io.swagger.model.Quantity;
import io.swagger.model.RelatedParty;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * Represents and tracks the aggregated amount remained or owed in certain account which is owned by certain customer for a set of buckets.
 */
@Schema(description = "Represents and tracks the aggregated amount remained or owed in certain account which is owned by certain customer for a set of buckets.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaJerseyServerCodegen", date = "2023-10-06T18:35:16.707674+01:00[Europe/Dublin]")public class AccumulatedBalance   {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("href")
  private String href = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("bucket")
  private List<BucketRef> bucket = new ArrayList<BucketRef>();

  @JsonProperty("logicalResource")
  private LogicalResourceRef logicalResource = null;

  @JsonProperty("partyAccount")
  private PartyAccountRef partyAccount = null;

  @JsonProperty("product")
  private List<ProductRef> product = null;

  @JsonProperty("relatedParty")
  private List<RelatedParty> relatedParty = null;

  @JsonProperty("totalBalance")
  private Quantity totalBalance = null;

  @JsonProperty("@baseType")
  private String _atBaseType = null;

  @JsonProperty("@schemaLocation")
  private String _atSchemaLocation = null;

  @JsonProperty("@type")
  private String _atType = null;

  public AccumulatedBalance id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Unique Identifier within the server for the recharge operation request
   * @return id
   **/
  @JsonProperty("id")
  @Schema(description = "Unique Identifier within the server for the recharge operation request")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public AccumulatedBalance href(String href) {
    this.href = href;
    return this;
  }

  /**
   * A resource URI pointing to the resource in the OB that stores the detailed information.
   * @return href
   **/
  @JsonProperty("href")
  @Schema(description = "A resource URI pointing to the resource in the OB that stores the detailed information.")
  public String getHref() {
    return href;
  }

  public void setHref(String href) {
    this.href = href;
  }

  public AccumulatedBalance description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Text describing the contents of the aggregated balance
   * @return description
   **/
  @JsonProperty("description")
  @Schema(description = "Text describing the contents of the aggregated balance")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public AccumulatedBalance name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Friendly name to identify the aggregated balance
   * @return name
   **/
  @JsonProperty("name")
  @Schema(required = true, description = "Friendly name to identify the aggregated balance")
  @NotNull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public AccumulatedBalance bucket(List<BucketRef> bucket) {
    this.bucket = bucket;
    return this;
  }

  public AccumulatedBalance addBucketItem(BucketRef bucketItem) {
    this.bucket.add(bucketItem);
    return this;
  }

  /**
   * A reference to the buckets involved in the aggregation
   * @return bucket
   **/
  @JsonProperty("bucket")
  @Schema(required = true, description = "A reference to the buckets involved in the aggregation")
  @NotNull
  @Valid
 @Size(min=1)  public List<BucketRef> getBucket() {
    return bucket;
  }

  public void setBucket(List<BucketRef> bucket) {
    this.bucket = bucket;
  }

  public AccumulatedBalance logicalResource(LogicalResourceRef logicalResource) {
    this.logicalResource = logicalResource;
    return this;
  }

  /**
   * Get logicalResource
   * @return logicalResource
   **/
  @JsonProperty("logicalResource")
  @Schema(description = "")
  @Valid
  public LogicalResourceRef getLogicalResource() {
    return logicalResource;
  }

  public void setLogicalResource(LogicalResourceRef logicalResource) {
    this.logicalResource = logicalResource;
  }

  public AccumulatedBalance partyAccount(PartyAccountRef partyAccount) {
    this.partyAccount = partyAccount;
    return this;
  }

  /**
   * Get partyAccount
   * @return partyAccount
   **/
  @JsonProperty("partyAccount")
  @Schema(description = "")
  @Valid
  public PartyAccountRef getPartyAccount() {
    return partyAccount;
  }

  public void setPartyAccount(PartyAccountRef partyAccount) {
    this.partyAccount = partyAccount;
  }

  public AccumulatedBalance product(List<ProductRef> product) {
    this.product = product;
    return this;
  }

  public AccumulatedBalance addProductItem(ProductRef productItem) {
    if (this.product == null) {
      this.product = new ArrayList<ProductRef>();
    }
    this.product.add(productItem);
    return this;
  }

  /**
   * A reference to the product whose consumption is managed by the bucket . This is an array to allow scenarios where a buckets are shared between different products
   * @return product
   **/
  @JsonProperty("product")
  @Schema(description = "A reference to the product whose consumption is managed by the bucket . This is an array to allow scenarios where a buckets are shared between different products")
  @Valid
  public List<ProductRef> getProduct() {
    return product;
  }

  public void setProduct(List<ProductRef> product) {
    this.product = product;
  }

  public AccumulatedBalance relatedParty(List<RelatedParty> relatedParty) {
    this.relatedParty = relatedParty;
    return this;
  }

  public AccumulatedBalance addRelatedPartyItem(RelatedParty relatedPartyItem) {
    if (this.relatedParty == null) {
      this.relatedParty = new ArrayList<RelatedParty>();
    }
    this.relatedParty.add(relatedPartyItem);
    return this;
  }

  /**
   * Used to provide information about any other entity with relation to the balance, for instance to define customer hierarchy for the balance (e.g.: customerId, userId, )
   * @return relatedParty
   **/
  @JsonProperty("relatedParty")
  @Schema(description = "Used to provide information about any other entity with relation to the balance, for instance to define customer hierarchy for the balance (e.g.: customerId, userId, )")
  @Valid
  public List<RelatedParty> getRelatedParty() {
    return relatedParty;
  }

  public void setRelatedParty(List<RelatedParty> relatedParty) {
    this.relatedParty = relatedParty;
  }

  public AccumulatedBalance totalBalance(Quantity totalBalance) {
    this.totalBalance = totalBalance;
    return this;
  }

  /**
   * Get totalBalance
   * @return totalBalance
   **/
  @JsonProperty("totalBalance")
  @Schema(required = true, description = "")
  @NotNull
  @Valid
  public Quantity getTotalBalance() {
    return totalBalance;
  }

  public void setTotalBalance(Quantity totalBalance) {
    this.totalBalance = totalBalance;
  }

  public AccumulatedBalance _atBaseType(String _atBaseType) {
    this._atBaseType = _atBaseType;
    return this;
  }

  /**
   * When sub-classing, this defines the super-class
   * @return _atBaseType
   **/
  @JsonProperty("@baseType")
  @Schema(description = "When sub-classing, this defines the super-class")
  public String getAtBaseType() {
    return _atBaseType;
  }

  public void setAtBaseType(String _atBaseType) {
    this._atBaseType = _atBaseType;
  }

  public AccumulatedBalance _atSchemaLocation(String _atSchemaLocation) {
    this._atSchemaLocation = _atSchemaLocation;
    return this;
  }

  /**
   * A URI to a JSON-Schema file that defines additional attributes and relationships
   * @return _atSchemaLocation
   **/
  @JsonProperty("@schemaLocation")
  @Schema(description = "A URI to a JSON-Schema file that defines additional attributes and relationships")
  public String getAtSchemaLocation() {
    return _atSchemaLocation;
  }

  public void setAtSchemaLocation(String _atSchemaLocation) {
    this._atSchemaLocation = _atSchemaLocation;
  }

  public AccumulatedBalance _atType(String _atType) {
    this._atType = _atType;
    return this;
  }

  /**
   * When sub-classing, this defines the sub-class entity name
   * @return _atType
   **/
  @JsonProperty("@type")
  @Schema(description = "When sub-classing, this defines the sub-class entity name")
  public String getAtType() {
    return _atType;
  }

  public void setAtType(String _atType) {
    this._atType = _atType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccumulatedBalance accumulatedBalance = (AccumulatedBalance) o;
    return Objects.equals(this.id, accumulatedBalance.id) &&
        Objects.equals(this.href, accumulatedBalance.href) &&
        Objects.equals(this.description, accumulatedBalance.description) &&
        Objects.equals(this.name, accumulatedBalance.name) &&
        Objects.equals(this.bucket, accumulatedBalance.bucket) &&
        Objects.equals(this.logicalResource, accumulatedBalance.logicalResource) &&
        Objects.equals(this.partyAccount, accumulatedBalance.partyAccount) &&
        Objects.equals(this.product, accumulatedBalance.product) &&
        Objects.equals(this.relatedParty, accumulatedBalance.relatedParty) &&
        Objects.equals(this.totalBalance, accumulatedBalance.totalBalance) &&
        Objects.equals(this._atBaseType, accumulatedBalance._atBaseType) &&
        Objects.equals(this._atSchemaLocation, accumulatedBalance._atSchemaLocation) &&
        Objects.equals(this._atType, accumulatedBalance._atType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, href, description, name, bucket, logicalResource, partyAccount, product, relatedParty, totalBalance, _atBaseType, _atSchemaLocation, _atType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccumulatedBalance {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    bucket: ").append(toIndentedString(bucket)).append("\n");
    sb.append("    logicalResource: ").append(toIndentedString(logicalResource)).append("\n");
    sb.append("    partyAccount: ").append(toIndentedString(partyAccount)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    relatedParty: ").append(toIndentedString(relatedParty)).append("\n");
    sb.append("    totalBalance: ").append(toIndentedString(totalBalance)).append("\n");
    sb.append("    _atBaseType: ").append(toIndentedString(_atBaseType)).append("\n");
    sb.append("    _atSchemaLocation: ").append(toIndentedString(_atSchemaLocation)).append("\n");
    sb.append("    _atType: ").append(toIndentedString(_atType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
