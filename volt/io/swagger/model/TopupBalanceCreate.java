/*
 * Prepay Balance Management
 * ## TMF API Reference: TMF654 - Prepay Balance Management  ### Draft : 19.5 - January 2020  The Prepay Balance Management API enables consumers to manage the balance, recharge (top-up), transfer, reserve, unreserve, deduct and balance adjustments of a  bucket. A bucket is understood in the context of this API to be an entity that keeps track of the balance available to use services. Every bucket will measure balance in different units, it can be monetary or non-monetary (e.g.: number of sms that are available, number of GB of data available, â€¦)  ### Resources - Bucket - TopupBalance - AdjustBalance - TransferBalance - ReserveBalance - AccumulatedBalance - BalanceActionHistory  ### Operations - Retrieve the balance information on a bucket for a given product (individual or aggregated). - Retrieve the list of balance-related operations performed over a given product - Retrieve information about all the top-up operations stored in the server filtered by some criteria. - Perform a new top up operation (recharge) - Retrieve detailed information about a top-up operation previously processed by the server. - Retrieve the current and historic status information about a top-up operation previously processed by the server. - Perform a new transfer operation - Retrieve information about all the transfer operations stored in the server filtered by some criteria - Retrieve detailed information about a transfer operation previously processed by the server - Retrieve the current and historic status information about a transfer operation previously processed by the server. - Retrieve information about all the adjustments stored in the server filtered by some criteria. - Perform a new adjustment operation - Retrieve detailed information about a balance adjustment operation previously processed by the server - Reserve a balance on a bucket. - Unreserve a balance on a bucket. - Retrieve aggregated (accumulative) balances for a bucket.
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.model.BucketRef;
import io.swagger.model.ChannelRef;
import io.swagger.model.LogicalResourceRef;
import io.swagger.model.PartyAccountRef;
import io.swagger.model.PaymentMethodRef;
import io.swagger.model.ProductRef;
import io.swagger.model.Quantity;
import io.swagger.model.RecurringPeriodType;
import io.swagger.model.RelatedParty;
import io.swagger.model.RelatedTopupBalance;
import io.swagger.model.TimePeriod;
import io.swagger.model.UsageType;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * Represents a detailed description of a recharge operation requested over a bucket (defined by a specific product or reference to a product (i.e.: a commercial id such as an msisidn) and a service type) Skipped properties: id,href,status,requestedDate,confirmationDate,relatedParty
 */
@Schema(description = "Represents a detailed description of a recharge operation requested over a bucket (defined by a specific product or reference to a product (i.e.: a commercial id such as an msisidn) and a service type) Skipped properties: id,href,status,requestedDate,confirmationDate,relatedParty")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaJerseyServerCodegen", date = "2023-10-06T18:35:16.707674+01:00[Europe/Dublin]")public class TopupBalanceCreate   {
  @JsonProperty("description")
  private String description = null;

  @JsonProperty("isAutoTopup")
  private Boolean isAutoTopup = null;

  @JsonProperty("numberOfPeriods")
  private Integer numberOfPeriods = null;

  @JsonProperty("reason")
  private String reason = null;

  @JsonProperty("voucher")
  private String voucher = null;

  @JsonProperty("amount")
  private Quantity amount = null;

  @JsonProperty("balanceTopup")
  private RelatedTopupBalance balanceTopup = null;

  @JsonProperty("bucket")
  private BucketRef bucket = null;

  @JsonProperty("channel")
  private ChannelRef channel = null;

  @JsonProperty("logicalResource")
  private List<LogicalResourceRef> logicalResource = null;

  @JsonProperty("partyAccount")
  private PartyAccountRef partyAccount = null;

  @JsonProperty("paymentMethod")
  private PaymentMethodRef paymentMethod = null;

  @JsonProperty("product")
  private List<ProductRef> product = null;

  @JsonProperty("recurringPeriod")
  private RecurringPeriodType recurringPeriod = null;

  @JsonProperty("requestor")
  private RelatedParty requestor = null;

  @JsonProperty("usageType")
  private UsageType usageType = null;

  @JsonProperty("validFor")
  private TimePeriod validFor = null;

  @JsonProperty("@baseType")
  private String _atBaseType = null;

  @JsonProperty("@schemaLocation")
  private String _atSchemaLocation = null;

  @JsonProperty("@type")
  private String _atType = null;

  public TopupBalanceCreate description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Description of the recharge operation
   * @return description
   **/
  @JsonProperty("description")
  @Schema(description = "Description of the recharge operation")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public TopupBalanceCreate isAutoTopup(Boolean isAutoTopup) {
    this.isAutoTopup = isAutoTopup;
    return this;
  }

  /**
   * Indicates if the topup requested is an autotopup (to be processed periodically)
   * @return isAutoTopup
   **/
  @JsonProperty("isAutoTopup")
  @Schema(description = "Indicates if the topup requested is an autotopup (to be processed periodically)")
  public Boolean isIsAutoTopup() {
    return isAutoTopup;
  }

  public void setIsAutoTopup(Boolean isAutoTopup) {
    this.isAutoTopup = isAutoTopup;
  }

  public TopupBalanceCreate numberOfPeriods(Integer numberOfPeriods) {
    this.numberOfPeriods = numberOfPeriods;
    return this;
  }

  /**
   * For autotopup indicates the number of occurrences of the period the recharge operation must be executed. If not included then no limit is set to stop the executionof the topup every period
   * @return numberOfPeriods
   **/
  @JsonProperty("numberOfPeriods")
  @Schema(description = "For autotopup indicates the number of occurrences of the period the recharge operation must be executed. If not included then no limit is set to stop the executionof the topup every period")
  public Integer getNumberOfPeriods() {
    return numberOfPeriods;
  }

  public void setNumberOfPeriods(Integer numberOfPeriods) {
    this.numberOfPeriods = numberOfPeriods;
  }

  public TopupBalanceCreate reason(String reason) {
    this.reason = reason;
    return this;
  }

  /**
   * Text describing the reason for the action/task
   * @return reason
   **/
  @JsonProperty("reason")
  @Schema(description = "Text describing the reason for the action/task")
  public String getReason() {
    return reason;
  }

  public void setReason(String reason) {
    this.reason = reason;
  }

  public TopupBalanceCreate voucher(String voucher) {
    this.voucher = voucher;
    return this;
  }

  /**
   * Identifier for a voucher when the topup can be performed by this means
   * @return voucher
   **/
  @JsonProperty("voucher")
  @Schema(description = "Identifier for a voucher when the topup can be performed by this means")
  public String getVoucher() {
    return voucher;
  }

  public void setVoucher(String voucher) {
    this.voucher = voucher;
  }

  public TopupBalanceCreate amount(Quantity amount) {
    this.amount = amount;
    return this;
  }

  /**
   * Get amount
   * @return amount
   **/
  @JsonProperty("amount")
  @Schema(required = true, description = "")
  @NotNull
  @Valid
  public Quantity getAmount() {
    return amount;
  }

  public void setAmount(Quantity amount) {
    this.amount = amount;
  }

  public TopupBalanceCreate balanceTopup(RelatedTopupBalance balanceTopup) {
    this.balanceTopup = balanceTopup;
    return this;
  }

  /**
   * Get balanceTopup
   * @return balanceTopup
   **/
  @JsonProperty("balanceTopup")
  @Schema(description = "")
  @Valid
  public RelatedTopupBalance getBalanceTopup() {
    return balanceTopup;
  }

  public void setBalanceTopup(RelatedTopupBalance balanceTopup) {
    this.balanceTopup = balanceTopup;
  }

  public TopupBalanceCreate bucket(BucketRef bucket) {
    this.bucket = bucket;
    return this;
  }

  /**
   * Get bucket
   * @return bucket
   **/
  @JsonProperty("bucket")
  @Schema(required = true, description = "")
  @NotNull
  @Valid
  public BucketRef getBucket() {
    return bucket;
  }

  public void setBucket(BucketRef bucket) {
    this.bucket = bucket;
  }

  public TopupBalanceCreate channel(ChannelRef channel) {
    this.channel = channel;
    return this;
  }

  /**
   * Get channel
   * @return channel
   **/
  @JsonProperty("channel")
  @Schema(description = "")
  @Valid
  public ChannelRef getChannel() {
    return channel;
  }

  public void setChannel(ChannelRef channel) {
    this.channel = channel;
  }

  public TopupBalanceCreate logicalResource(List<LogicalResourceRef> logicalResource) {
    this.logicalResource = logicalResource;
    return this;
  }

  public TopupBalanceCreate addLogicalResourceItem(LogicalResourceRef logicalResourceItem) {
    if (this.logicalResource == null) {
      this.logicalResource = new ArrayList<LogicalResourceRef>();
    }
    this.logicalResource.add(logicalResourceItem);
    return this;
  }

  /**
   * Get logicalResource
   * @return logicalResource
   **/
  @JsonProperty("logicalResource")
  @Schema(description = "")
  @Valid
  public List<LogicalResourceRef> getLogicalResource() {
    return logicalResource;
  }

  public void setLogicalResource(List<LogicalResourceRef> logicalResource) {
    this.logicalResource = logicalResource;
  }

  public TopupBalanceCreate partyAccount(PartyAccountRef partyAccount) {
    this.partyAccount = partyAccount;
    return this;
  }

  /**
   * Get partyAccount
   * @return partyAccount
   **/
  @JsonProperty("partyAccount")
  @Schema(required = true, description = "")
  @NotNull
  @Valid
  public PartyAccountRef getPartyAccount() {
    return partyAccount;
  }

  public void setPartyAccount(PartyAccountRef partyAccount) {
    this.partyAccount = partyAccount;
  }

  public TopupBalanceCreate paymentMethod(PaymentMethodRef paymentMethod) {
    this.paymentMethod = paymentMethod;
    return this;
  }

  /**
   * Get paymentMethod
   * @return paymentMethod
   **/
  @JsonProperty("paymentMethod")
  @Schema(description = "")
  @Valid
  public PaymentMethodRef getPaymentMethod() {
    return paymentMethod;
  }

  public void setPaymentMethod(PaymentMethodRef paymentMethod) {
    this.paymentMethod = paymentMethod;
  }

  public TopupBalanceCreate product(List<ProductRef> product) {
    this.product = product;
    return this;
  }

  public TopupBalanceCreate addProductItem(ProductRef productItem) {
    if (this.product == null) {
      this.product = new ArrayList<ProductRef>();
    }
    this.product.add(productItem);
    return this;
  }

  /**
   * Get product
   * @return product
   **/
  @JsonProperty("product")
  @Schema(description = "")
  @Valid
  public List<ProductRef> getProduct() {
    return product;
  }

  public void setProduct(List<ProductRef> product) {
    this.product = product;
  }

  public TopupBalanceCreate recurringPeriod(RecurringPeriodType recurringPeriod) {
    this.recurringPeriod = recurringPeriod;
    return this;
  }

  /**
   * Get recurringPeriod
   * @return recurringPeriod
   **/
  @JsonProperty("recurringPeriod")
  @Schema(description = "")
  @Valid
  public RecurringPeriodType getRecurringPeriod() {
    return recurringPeriod;
  }

  public void setRecurringPeriod(RecurringPeriodType recurringPeriod) {
    this.recurringPeriod = recurringPeriod;
  }

  public TopupBalanceCreate requestor(RelatedParty requestor) {
    this.requestor = requestor;
    return this;
  }

  /**
   * Get requestor
   * @return requestor
   **/
  @JsonProperty("requestor")
  @Schema(description = "")
  @Valid
  public RelatedParty getRequestor() {
    return requestor;
  }

  public void setRequestor(RelatedParty requestor) {
    this.requestor = requestor;
  }

  public TopupBalanceCreate usageType(UsageType usageType) {
    this.usageType = usageType;
    return this;
  }

  /**
   * Get usageType
   * @return usageType
   **/
  @JsonProperty("usageType")
  @Schema(required = true, description = "")
  @NotNull
  @Valid
  public UsageType getUsageType() {
    return usageType;
  }

  public void setUsageType(UsageType usageType) {
    this.usageType = usageType;
  }

  public TopupBalanceCreate validFor(TimePeriod validFor) {
    this.validFor = validFor;
    return this;
  }

  /**
   * Get validFor
   * @return validFor
   **/
  @JsonProperty("validFor")
  @Schema(description = "")
  @Valid
  public TimePeriod getValidFor() {
    return validFor;
  }

  public void setValidFor(TimePeriod validFor) {
    this.validFor = validFor;
  }

  public TopupBalanceCreate _atBaseType(String _atBaseType) {
    this._atBaseType = _atBaseType;
    return this;
  }

  /**
   * When sub-classing, this defines the super-class
   * @return _atBaseType
   **/
  @JsonProperty("@baseType")
  @Schema(description = "When sub-classing, this defines the super-class")
  public String getAtBaseType() {
    return _atBaseType;
  }

  public void setAtBaseType(String _atBaseType) {
    this._atBaseType = _atBaseType;
  }

  public TopupBalanceCreate _atSchemaLocation(String _atSchemaLocation) {
    this._atSchemaLocation = _atSchemaLocation;
    return this;
  }

  /**
   * A URI to a JSON-Schema file that defines additional attributes and relationships
   * @return _atSchemaLocation
   **/
  @JsonProperty("@schemaLocation")
  @Schema(description = "A URI to a JSON-Schema file that defines additional attributes and relationships")
  public String getAtSchemaLocation() {
    return _atSchemaLocation;
  }

  public void setAtSchemaLocation(String _atSchemaLocation) {
    this._atSchemaLocation = _atSchemaLocation;
  }

  public TopupBalanceCreate _atType(String _atType) {
    this._atType = _atType;
    return this;
  }

  /**
   * When sub-classing, this defines the sub-class entity name
   * @return _atType
   **/
  @JsonProperty("@type")
  @Schema(description = "When sub-classing, this defines the sub-class entity name")
  public String getAtType() {
    return _atType;
  }

  public void setAtType(String _atType) {
    this._atType = _atType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TopupBalanceCreate topupBalanceCreate = (TopupBalanceCreate) o;
    return Objects.equals(this.description, topupBalanceCreate.description) &&
        Objects.equals(this.isAutoTopup, topupBalanceCreate.isAutoTopup) &&
        Objects.equals(this.numberOfPeriods, topupBalanceCreate.numberOfPeriods) &&
        Objects.equals(this.reason, topupBalanceCreate.reason) &&
        Objects.equals(this.voucher, topupBalanceCreate.voucher) &&
        Objects.equals(this.amount, topupBalanceCreate.amount) &&
        Objects.equals(this.balanceTopup, topupBalanceCreate.balanceTopup) &&
        Objects.equals(this.bucket, topupBalanceCreate.bucket) &&
        Objects.equals(this.channel, topupBalanceCreate.channel) &&
        Objects.equals(this.logicalResource, topupBalanceCreate.logicalResource) &&
        Objects.equals(this.partyAccount, topupBalanceCreate.partyAccount) &&
        Objects.equals(this.paymentMethod, topupBalanceCreate.paymentMethod) &&
        Objects.equals(this.product, topupBalanceCreate.product) &&
        Objects.equals(this.recurringPeriod, topupBalanceCreate.recurringPeriod) &&
        Objects.equals(this.requestor, topupBalanceCreate.requestor) &&
        Objects.equals(this.usageType, topupBalanceCreate.usageType) &&
        Objects.equals(this.validFor, topupBalanceCreate.validFor) &&
        Objects.equals(this._atBaseType, topupBalanceCreate._atBaseType) &&
        Objects.equals(this._atSchemaLocation, topupBalanceCreate._atSchemaLocation) &&
        Objects.equals(this._atType, topupBalanceCreate._atType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, isAutoTopup, numberOfPeriods, reason, voucher, amount, balanceTopup, bucket, channel, logicalResource, partyAccount, paymentMethod, product, recurringPeriod, requestor, usageType, validFor, _atBaseType, _atSchemaLocation, _atType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TopupBalanceCreate {\n");
    
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    isAutoTopup: ").append(toIndentedString(isAutoTopup)).append("\n");
    sb.append("    numberOfPeriods: ").append(toIndentedString(numberOfPeriods)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    voucher: ").append(toIndentedString(voucher)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    balanceTopup: ").append(toIndentedString(balanceTopup)).append("\n");
    sb.append("    bucket: ").append(toIndentedString(bucket)).append("\n");
    sb.append("    channel: ").append(toIndentedString(channel)).append("\n");
    sb.append("    logicalResource: ").append(toIndentedString(logicalResource)).append("\n");
    sb.append("    partyAccount: ").append(toIndentedString(partyAccount)).append("\n");
    sb.append("    paymentMethod: ").append(toIndentedString(paymentMethod)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    recurringPeriod: ").append(toIndentedString(recurringPeriod)).append("\n");
    sb.append("    requestor: ").append(toIndentedString(requestor)).append("\n");
    sb.append("    usageType: ").append(toIndentedString(usageType)).append("\n");
    sb.append("    validFor: ").append(toIndentedString(validFor)).append("\n");
    sb.append("    _atBaseType: ").append(toIndentedString(_atBaseType)).append("\n");
    sb.append("    _atSchemaLocation: ").append(toIndentedString(_atSchemaLocation)).append("\n");
    sb.append("    _atType: ").append(toIndentedString(_atType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
