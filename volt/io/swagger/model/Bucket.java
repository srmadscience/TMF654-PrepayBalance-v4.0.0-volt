/*
 * Prepay Balance Management
 * ## TMF API Reference: TMF654 - Prepay Balance Management  ### Draft : 19.5 - January 2020  The Prepay Balance Management API enables consumers to manage the balance, recharge (top-up), transfer, reserve, unreserve, deduct and balance adjustments of a  bucket. A bucket is understood in the context of this API to be an entity that keeps track of the balance available to use services. Every bucket will measure balance in different units, it can be monetary or non-monetary (e.g.: number of sms that are available, number of GB of data available, â€¦)  ### Resources - Bucket - TopupBalance - AdjustBalance - TransferBalance - ReserveBalance - AccumulatedBalance - BalanceActionHistory  ### Operations - Retrieve the balance information on a bucket for a given product (individual or aggregated). - Retrieve the list of balance-related operations performed over a given product - Retrieve information about all the top-up operations stored in the server filtered by some criteria. - Perform a new top up operation (recharge) - Retrieve detailed information about a top-up operation previously processed by the server. - Retrieve the current and historic status information about a top-up operation previously processed by the server. - Perform a new transfer operation - Retrieve information about all the transfer operations stored in the server filtered by some criteria - Retrieve detailed information about a transfer operation previously processed by the server - Retrieve the current and historic status information about a transfer operation previously processed by the server. - Retrieve information about all the adjustments stored in the server filtered by some criteria. - Perform a new adjustment operation - Retrieve detailed information about a balance adjustment operation previously processed by the server - Reserve a balance on a bucket. - Unreserve a balance on a bucket. - Retrieve aggregated (accumulative) balances for a bucket.
 *
 * OpenAPI spec version: 4.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.model.BucketStatusType;
import io.swagger.model.LogicalResourceRef;
import io.swagger.model.PartyAccountRef;
import io.swagger.model.ProductRef;
import io.swagger.model.Quantity;
import io.swagger.model.RelatedParty;
import io.swagger.model.TimePeriod;
import io.swagger.model.UsageType;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * A bucket (called UsageVolumProduct in the SID Model) represents and tracks a quantity of usage (remaining or consumed). It could be either a quantity or an amount in a currency. It can represent a fixed number of SMS,MMS, call minutes, quantity of data and so on
 */
@Schema(description = "A bucket (called UsageVolumProduct in the SID Model) represents and tracks a quantity of usage (remaining or consumed). It could be either a quantity or an amount in a currency. It can represent a fixed number of SMS,MMS, call minutes, quantity of data and so on")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaJerseyServerCodegen", date = "2023-10-06T18:35:16.707674+01:00[Europe/Dublin]")public class Bucket   {
  @JsonProperty("id")
  private String id = null;

  @JsonProperty("href")
  private String href = null;

  @JsonProperty("confirmationDate")
  private Date confirmationDate = null;

  @JsonProperty("description")
  private String description = null;

  @JsonProperty("isShared")
  private Boolean isShared = null;

  @JsonProperty("name")
  private String name = null;

  @JsonProperty("remainingValueName")
  private String remainingValueName = null;

  @JsonProperty("requestedDate")
  private Date requestedDate = null;

  @JsonProperty("logicalResource")
  private List<LogicalResourceRef> logicalResource = null;

  @JsonProperty("partyAccount")
  private PartyAccountRef partyAccount = null;

  @JsonProperty("product")
  private List<ProductRef> product = null;

  @JsonProperty("relatedParty")
  private List<RelatedParty> relatedParty = null;

  @JsonProperty("remainingValue")
  private Quantity remainingValue = null;

  @JsonProperty("reservedValue")
  private Quantity reservedValue = null;

  @JsonProperty("status")
  private BucketStatusType status = null;

  @JsonProperty("usageType")
  private UsageType usageType = null;

  @JsonProperty("validFor")
  private TimePeriod validFor = null;

  @JsonProperty("@baseType")
  private String _atBaseType = null;

  @JsonProperty("@schemaLocation")
  private String _atSchemaLocation = null;

  @JsonProperty("@type")
  private String _atType = null;

  public Bucket id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Unique Identifier within the server for the bucket
   * @return id
   **/
  @JsonProperty("id")
  @Schema(description = "Unique Identifier within the server for the bucket")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Bucket href(String href) {
    this.href = href;
    return this;
  }

  /**
   * A resource URI pointing to the resource in the OB that stores the detailed information for the bucket
   * @return href
   **/
  @JsonProperty("href")
  @Schema(description = "A resource URI pointing to the resource in the OB that stores the detailed information for the bucket")
  public String getHref() {
    return href;
  }

  public void setHref(String href) {
    this.href = href;
  }

  public Bucket confirmationDate(Date confirmationDate) {
    this.confirmationDate = confirmationDate;
    return this;
  }

  /**
   * Date when the deduction was confirmed in the server
   * @return confirmationDate
   **/
  @JsonProperty("confirmationDate")
  @Schema(description = "Date when the deduction was confirmed in the server")
  @Valid
  public Date getConfirmationDate() {
    return confirmationDate;
  }

  public void setConfirmationDate(Date confirmationDate) {
    this.confirmationDate = confirmationDate;
  }

  public Bucket description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Text describing the contents of the balance managed by the bucket
   * @return description
   **/
  @JsonProperty("description")
  @Schema(description = "Text describing the contents of the balance managed by the bucket")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Bucket isShared(Boolean isShared) {
    this.isShared = isShared;
    return this;
  }

  /**
   * True if the bucket is shared between several devices or users
   * @return isShared
   **/
  @JsonProperty("isShared")
  @Schema(description = "True if the bucket is shared between several devices or users")
  public Boolean isIsShared() {
    return isShared;
  }

  public void setIsShared(Boolean isShared) {
    this.isShared = isShared;
  }

  public Bucket name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Friendly name to identify the bucket
   * @return name
   **/
  @JsonProperty("name")
  @Schema(description = "Friendly name to identify the bucket")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Bucket remainingValueName(String remainingValueName) {
    this.remainingValueName = remainingValueName;
    return this;
  }

  /**
   * Remaining amount in a formatted string for the bucket given in the balance unit (for example 1.9 Gb). This formatted string could be used for display needs for example
   * @return remainingValueName
   **/
  @JsonProperty("remainingValueName")
  @Schema(description = "Remaining amount in a formatted string for the bucket given in the balance unit (for example 1.9 Gb). This formatted string could be used for display needs for example")
  public String getRemainingValueName() {
    return remainingValueName;
  }

  public void setRemainingValueName(String remainingValueName) {
    this.remainingValueName = remainingValueName;
  }

  public Bucket requestedDate(Date requestedDate) {
    this.requestedDate = requestedDate;
    return this;
  }

  /**
   * Date when the deduction request was received in the server
   * @return requestedDate
   **/
  @JsonProperty("requestedDate")
  @Schema(description = "Date when the deduction request was received in the server")
  @Valid
  public Date getRequestedDate() {
    return requestedDate;
  }

  public void setRequestedDate(Date requestedDate) {
    this.requestedDate = requestedDate;
  }

  public Bucket logicalResource(List<LogicalResourceRef> logicalResource) {
    this.logicalResource = logicalResource;
    return this;
  }

  public Bucket addLogicalResourceItem(LogicalResourceRef logicalResourceItem) {
    if (this.logicalResource == null) {
      this.logicalResource = new ArrayList<LogicalResourceRef>();
    }
    this.logicalResource.add(logicalResourceItem);
    return this;
  }

  /**
   * Get logicalResource
   * @return logicalResource
   **/
  @JsonProperty("logicalResource")
  @Schema(description = "")
  @Valid
  public List<LogicalResourceRef> getLogicalResource() {
    return logicalResource;
  }

  public void setLogicalResource(List<LogicalResourceRef> logicalResource) {
    this.logicalResource = logicalResource;
  }

  public Bucket partyAccount(PartyAccountRef partyAccount) {
    this.partyAccount = partyAccount;
    return this;
  }

  /**
   * Get partyAccount
   * @return partyAccount
   **/
  @JsonProperty("partyAccount")
  @Schema(description = "")
  @Valid
  public PartyAccountRef getPartyAccount() {
    return partyAccount;
  }

  public void setPartyAccount(PartyAccountRef partyAccount) {
    this.partyAccount = partyAccount;
  }

  public Bucket product(List<ProductRef> product) {
    this.product = product;
    return this;
  }

  public Bucket addProductItem(ProductRef productItem) {
    if (this.product == null) {
      this.product = new ArrayList<ProductRef>();
    }
    this.product.add(productItem);
    return this;
  }

  /**
   * Get product
   * @return product
   **/
  @JsonProperty("product")
  @Schema(description = "")
  @Valid
  public List<ProductRef> getProduct() {
    return product;
  }

  public void setProduct(List<ProductRef> product) {
    this.product = product;
  }

  public Bucket relatedParty(List<RelatedParty> relatedParty) {
    this.relatedParty = relatedParty;
    return this;
  }

  public Bucket addRelatedPartyItem(RelatedParty relatedPartyItem) {
    if (this.relatedParty == null) {
      this.relatedParty = new ArrayList<RelatedParty>();
    }
    this.relatedParty.add(relatedPartyItem);
    return this;
  }

  /**
   * Used to provide information about any other entity with relation to the balance, for instance to define customer hierarchy for the balance (e.g.: customerId, userId, )
   * @return relatedParty
   **/
  @JsonProperty("relatedParty")
  @Schema(description = "Used to provide information about any other entity with relation to the balance, for instance to define customer hierarchy for the balance (e.g.: customerId, userId, )")
  @Valid
  public List<RelatedParty> getRelatedParty() {
    return relatedParty;
  }

  public void setRelatedParty(List<RelatedParty> relatedParty) {
    this.relatedParty = relatedParty;
  }

  public Bucket remainingValue(Quantity remainingValue) {
    this.remainingValue = remainingValue;
    return this;
  }

  /**
   * Get remainingValue
   * @return remainingValue
   **/
  @JsonProperty("remainingValue")
  @Schema(description = "")
  @Valid
  public Quantity getRemainingValue() {
    return remainingValue;
  }

  public void setRemainingValue(Quantity remainingValue) {
    this.remainingValue = remainingValue;
  }

  public Bucket reservedValue(Quantity reservedValue) {
    this.reservedValue = reservedValue;
    return this;
  }

  /**
   * Get reservedValue
   * @return reservedValue
   **/
  @JsonProperty("reservedValue")
  @Schema(description = "")
  @Valid
  public Quantity getReservedValue() {
    return reservedValue;
  }

  public void setReservedValue(Quantity reservedValue) {
    this.reservedValue = reservedValue;
  }

  public Bucket status(BucketStatusType status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   **/
  @JsonProperty("status")
  @Schema(description = "")
  @Valid
  public BucketStatusType getStatus() {
    return status;
  }

  public void setStatus(BucketStatusType status) {
    this.status = status;
  }

  public Bucket usageType(UsageType usageType) {
    this.usageType = usageType;
    return this;
  }

  /**
   * Get usageType
   * @return usageType
   **/
  @JsonProperty("usageType")
  @Schema(description = "")
  @Valid
  public UsageType getUsageType() {
    return usageType;
  }

  public void setUsageType(UsageType usageType) {
    this.usageType = usageType;
  }

  public Bucket validFor(TimePeriod validFor) {
    this.validFor = validFor;
    return this;
  }

  /**
   * Get validFor
   * @return validFor
   **/
  @JsonProperty("validFor")
  @Schema(description = "")
  @Valid
  public TimePeriod getValidFor() {
    return validFor;
  }

  public void setValidFor(TimePeriod validFor) {
    this.validFor = validFor;
  }

  public Bucket _atBaseType(String _atBaseType) {
    this._atBaseType = _atBaseType;
    return this;
  }

  /**
   * When sub-classing, this defines the super-class
   * @return _atBaseType
   **/
  @JsonProperty("@baseType")
  @Schema(description = "When sub-classing, this defines the super-class")
  public String getAtBaseType() {
    return _atBaseType;
  }

  public void setAtBaseType(String _atBaseType) {
    this._atBaseType = _atBaseType;
  }

  public Bucket _atSchemaLocation(String _atSchemaLocation) {
    this._atSchemaLocation = _atSchemaLocation;
    return this;
  }

  /**
   * A URI to a JSON-Schema file that defines additional attributes and relationships
   * @return _atSchemaLocation
   **/
  @JsonProperty("@schemaLocation")
  @Schema(description = "A URI to a JSON-Schema file that defines additional attributes and relationships")
  public String getAtSchemaLocation() {
    return _atSchemaLocation;
  }

  public void setAtSchemaLocation(String _atSchemaLocation) {
    this._atSchemaLocation = _atSchemaLocation;
  }

  public Bucket _atType(String _atType) {
    this._atType = _atType;
    return this;
  }

  /**
   * When sub-classing, this defines the sub-class entity name
   * @return _atType
   **/
  @JsonProperty("@type")
  @Schema(description = "When sub-classing, this defines the sub-class entity name")
  public String getAtType() {
    return _atType;
  }

  public void setAtType(String _atType) {
    this._atType = _atType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Bucket bucket = (Bucket) o;
    return Objects.equals(this.id, bucket.id) &&
        Objects.equals(this.href, bucket.href) &&
        Objects.equals(this.confirmationDate, bucket.confirmationDate) &&
        Objects.equals(this.description, bucket.description) &&
        Objects.equals(this.isShared, bucket.isShared) &&
        Objects.equals(this.name, bucket.name) &&
        Objects.equals(this.remainingValueName, bucket.remainingValueName) &&
        Objects.equals(this.requestedDate, bucket.requestedDate) &&
        Objects.equals(this.logicalResource, bucket.logicalResource) &&
        Objects.equals(this.partyAccount, bucket.partyAccount) &&
        Objects.equals(this.product, bucket.product) &&
        Objects.equals(this.relatedParty, bucket.relatedParty) &&
        Objects.equals(this.remainingValue, bucket.remainingValue) &&
        Objects.equals(this.reservedValue, bucket.reservedValue) &&
        Objects.equals(this.status, bucket.status) &&
        Objects.equals(this.usageType, bucket.usageType) &&
        Objects.equals(this.validFor, bucket.validFor) &&
        Objects.equals(this._atBaseType, bucket._atBaseType) &&
        Objects.equals(this._atSchemaLocation, bucket._atSchemaLocation) &&
        Objects.equals(this._atType, bucket._atType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, href, confirmationDate, description, isShared, name, remainingValueName, requestedDate, logicalResource, partyAccount, product, relatedParty, remainingValue, reservedValue, status, usageType, validFor, _atBaseType, _atSchemaLocation, _atType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Bucket {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    confirmationDate: ").append(toIndentedString(confirmationDate)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    isShared: ").append(toIndentedString(isShared)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    remainingValueName: ").append(toIndentedString(remainingValueName)).append("\n");
    sb.append("    requestedDate: ").append(toIndentedString(requestedDate)).append("\n");
    sb.append("    logicalResource: ").append(toIndentedString(logicalResource)).append("\n");
    sb.append("    partyAccount: ").append(toIndentedString(partyAccount)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    relatedParty: ").append(toIndentedString(relatedParty)).append("\n");
    sb.append("    remainingValue: ").append(toIndentedString(remainingValue)).append("\n");
    sb.append("    reservedValue: ").append(toIndentedString(reservedValue)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    usageType: ").append(toIndentedString(usageType)).append("\n");
    sb.append("    validFor: ").append(toIndentedString(validFor)).append("\n");
    sb.append("    _atBaseType: ").append(toIndentedString(_atBaseType)).append("\n");
    sb.append("    _atSchemaLocation: ").append(toIndentedString(_atSchemaLocation)).append("\n");
    sb.append("    _atType: ").append(toIndentedString(_atType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
